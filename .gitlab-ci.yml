stages:
- test
- package
- containerize
- publish

Test:
  stage: test
  tags:
  - docker
  script:
  - sbt clean update test

Package:
  stage: package
  dependencies:
  - Test
  tags:
  - docker
  script:
  - sbt universal:packageZipTarball
  artifacts:
    name: "${CI_PROJECT_NAME}_${CI_COMMIT_SHA}"
    paths:
    - target/universal/*
    when: on_success
  only:
  - master

Containerize:
  stage: containerize
  tags:
  - docker
  dependencies:
  - Package
  script:
  - docker pull openjdk:8-alpine
  - docker build -t dockreg.adam.payvision/${CI_PROJECT_NAME}:latest -t dockreg.adam.payvision/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} .
  only:
  - master

Publish:
  stage: publish
  tags:
  - docker
  dependencies:
  - Containerize
  script:
  - docker login -u ${DOCKERREG_USERNAME} -p ${DOCKERREG_PASSWORD} dockreg.adam.payvision
  - docker push dockreg.adam.payvision/${CI_PROJECT_NAME}:latest
  - docker push dockreg.adam.payvision/${CI_PROJECT_NAME}:${CI_COMMIT_SHA} .
  only:
  - master
